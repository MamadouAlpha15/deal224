<?php

namespace App\Models; // DÃ©clare le namespace du modÃ¨le (organisation des classes dans Laravel)

use Illuminate\Database\Eloquent\Model; // Importe la classe de base des modÃ¨les Eloquent

class Ad extends Model // DÃ©clare le modÃ¨le Ad qui hÃ©rite de la classe Eloquent Model
{
    /**
     * ğŸ”’ Liste des attributs qui peuvent Ãªtre remplis en masse (mass assignment).
     * Cela empÃªche de remplir des champs non autorisÃ©s via $request->all() par exemple.
     */
    protected $fillable = [
        'title',       // Titre de lâ€™annonce
        'description', // Description de lâ€™annonce
        'price',       // Prix de lâ€™annonce
        'phone',       // NumÃ©ro de tÃ©lÃ©phone de l'annonceur
        'whatsapp',  // NumÃ©ro WhatsApp de l'annonceur
        'location',    // Localisation de lâ€™annonce
        'user_id',     // Identifiant de lâ€™utilisateur qui a crÃ©Ã© lâ€™annonce
    ];

    /**
     * ğŸ”— Relation : Une annonce appartient Ã  un utilisateur (1:N)
     * Cela permet dâ€™accÃ©der Ã  lâ€™auteur de lâ€™annonce avec $ad->user
     */
    public function user()
    {
        return $this->belongsTo(User::class);
        // 'belongsTo' signifie que chaque annonce appartient Ã  un seul utilisateur
    }

    /**
     * ğŸ”— Relation : Une annonce a plusieurs images (1:N)
     * Cela permet dâ€™accÃ©der aux images liÃ©es Ã  une annonce avec $ad->images
     */
    public function images()
    {
        return $this->hasMany(AdImage::class);
        // 'hasMany' signifie quâ€™une annonce peut avoir plusieurs images
    }


    /**
     * ğŸ”— Relation : Une annonce peut avoir plusieurs paiements de boost (1:N)
     * Cela permet dâ€™accÃ©der aux paiements de boost liÃ©s Ã  une annonce avec $ad->boostPayments
     */
public function boostPayments()
{
    return $this->hasMany(BoostPayment::class, 'user_id', 'user_id');
}

}
